#:import MouseBorderScroll widget.mouseBorderScroll.MouseBorderScroll
#:import Selection widget.selection.Selection
#:import SelectionUnits gameWidget.selectionUnits.SelectionUnits
#:import SelectionActions gameWidget.selectionActions.SelectionActions
#:import UnitsWidget unitsWidget.UnitsWidget

RelativeLayout:
    id: main_layout
    on_size: strat_game.on_resize(*args)

    MouseBorderScroll:
        size_hint: (1, 1)
        pos_int: {'x':0, 'y':0}


        Selection:
            id: main_select
            size_hint_y: None
            size_hint_x: None
            size: strat_game.size 
            on_selection: strat_game.selection(args[1])

            pos_int: (0, 0)
            color: .5, 0, 1, 1

            StratGame:
                id: strat_game
                cur_action: show_actions.action
                units_widget: unit_widget
                size_hint_y: None
                size_hint_x: None
                size: (1000, 1000)
                pos_int: (0, 0)
                on_unit_selection: show_units.change_selection(*args)
                on_unit_selection: show_actions.change_selection(*args)

                UnitsWidget:
                    id: unit_widget
                    pos_int: {'x':0, 'y':0}
                    size_hint: (1, 1)

    Button:
        size_hint: (.1, .1)
        pos_hint: {'x':.875, 'y':.05}
        text: repr(strat_game.size)
        on_release: strat_game.tooglePlainView()

    SelectionUnits:
        id: show_units
        size_hint: (.1, .75)
        pos_hint: {'x':.875, 'y':.2}
        orientation: 'tb-rl'
        padding: 0 
        spacing: 5
        sub_element_size_hint: (.5, .05)

    SelectionActions:
        id: show_actions
        size_hint: (.1, .75)
        pos_hint: {'x':.025, 'y':.2}
        orientation: 'tb-rl'
        padding: 0 
        spacing: 5
        sub_element_size_hint: (.5, .05)



